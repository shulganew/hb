openapi: "3.0.0"
info:
  version: 1.0.0
  title: Igor's Happy Birthday service
  description: Happy Birthday notify you!
  termsOfService: https://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: https://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /register/{file}:
    get:
      summary: registration form 
      description: new user registration form
      operationId: NewUserForm
      parameters:
        - name: file
          in: path
          description: 
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Listed files
        '204':
          description: No content
        '400':
          description: Error decode json
        '401':
          description: User not authorized
        '500':
          description: Internal error site listing
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /register:
    post:
      summary: add mew user
      description: add new user
      operationId: CreateUser
      parameters:
      requestBody:
        description: User login from telegram
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                tg:
                  type: string
                uname:
                  type: string
                psw:
                  type: string
                pswr:
                  type: string
                hb:
                  type: string
              required:
                - tg
                - uname
                - psw
                - pswr
                - hb
        '200':
          description: Listed files
        '204':
          description: No content
        '400':
          description: Error decode json
        '401':
          description: User not authorized
        '500':
          description: Internal error site listing
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /login:
    get:
      summary: User login
      description: Handler make existing user auth (login)
      operationId: Login
      parameters:
        - name: auth_date
          in: query
          description: ID of file to return
          required: true
          schema:
            type: string
            format: string
        - name: first_name
          in: query
          description: first name
          required: true
          schema:
            type: string
            format: string
        - name: id
          in: query
          description: ID telegram user
          required: true
          schema:
            type: string
            format: string
        - name: last_name
          in: query
          description: last name
          required: true
          schema:
            type: string
            format: string
        - name: photo_url
          in: query
          description: phote
          required: true
          schema:
            type: string
            format: string
        - name: username
          in: query
          description: telegram @user
          required: true
          schema:
            type: string
            format: string
        - name: hash
          in: query
          description: hash
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Successful login
        '400':
          description: Error decode json
        '401':
          description: Wrong login or password
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    User:
      allOf:
        - $ref: '#/components/schemas/NewUser'
        - required:
            - userID
          properties:
            userID:
              type: string
              format: string
              description: User id
    NewUser:
      required:
        - login
        - password
        - email
        - hb
      properties:
        login:
          type: string
          description: User login from registration
        password:
          type: string
          description: User pass from registartion
        email:
          type: string
          description: Users email
        hb:
          type: string
          format: date
          description: Happy birthday day
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message